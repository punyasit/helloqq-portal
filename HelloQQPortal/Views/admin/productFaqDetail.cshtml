@model HelloQQPortal.Models.ProductFaqInfo

@{
    ViewBag.Title = "การจัดการคำถามที่พบบ่อย : HelloQQShop ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>การจัดการคำถามที่พบบ่อย</h2>

<div style="padding-left:40px;">
    @using (Html.BeginForm("UpdateFaqDetail", "admin", FormMethod.Post, new { id = "frmInput" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal admin">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group row">
                @Html.Label("product", "สินค้า", htmlAttributes: new { @class = "col-sm-2 col-form-label", id = "lbProductName" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SelectedProductId,
                   new SelectList(Model.ProductList, "id", "name", Model.SelectedProductId),
                   new { @class = "custom-select", id = "ddlProduct" })
                </div>
            </div>

            @if (Model.ProductFaq.id > 0)
            {
                @Html.HiddenFor(model => model.ProductFaq.id)
                @Html.HiddenFor(model => model.ProductFaq.created_by)

                <div class="form-group row">
                    @Html.Label("recordId", "ไอดี", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.LabelForModel(Model.ProductFaq.id.ToString(), htmlAttributes: new { @class = "form-label" })
                    </div>
                </div>
            }

            <div class="form-group row">
                @Html.Label("question", "คำถาม", htmlAttributes: new { @class = "col-sm-2 col-form-label", id = "txtQuestions" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.ProductFaq.question, new { htmlAttributes = new { @class = "form-control", id = "txtQuestion", required = "required", oninvalid = "this.setCustomValidity('กรุณาใส่คำถาม')" } })
                    @Html.ValidationMessageFor(model => model.ProductFaq.question, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.Label("answer", "คำตอบ", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.ProductFaq.answer, new { htmlAttributes = new { @class = "form-control", id = "txtAnswer", required = "required", oninvalid = "this.setCustomValidity('กรุณาใส่คำตอบ')" } })
                    @Html.ValidationMessageFor(model => model.ProductFaq.answer, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-sm-2 col-form-label">
                    &nbsp;
                </div>
                <div class="col-md-10">
                    <input type="submit" value="บันทึก" class="btn btn-primary btn-md active" />
                    @*<input type="button" value="กลับหน้าหลัก" class="btn btn-default" />*@
                    @*@Html.ActionLink("กลับหน้าหลัก", "product", "admin", new { @class = "btn btn-primary btn-md active", @role = "button" })*@
                    <a href="/admin/product-faq" role="button" class="btn btn-primary btn-md active">กลับหน้าหลัก</a>
                </div>
            </div>

            @if (Model.ProductFaqList != null)
            {
                foreach (var item in Model.ProductFaqList)
                {
                    <div class="form-group row">
                        @Html.Label("recordId", "ไอดี", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-10">
                            @Html.LabelForModel(item.id.ToString(), htmlAttributes: new { @class = "form-label" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.Label("order", "ลำดับ", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-10">
                            @Html.LabelForModel(item.order.ToString(), htmlAttributes: new { @class = "form-label" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.Label("question", "คำถาม", htmlAttributes: new { @class = "col-sm-2 col-form-label", id = "txtQuestions" })
                        <div class="col-md-10">

                            @Html.LabelForModel(item.question.ToString(), htmlAttributes: new { @class = "form-label" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.Label("answer", "คำตอบ", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-md-10">
                            @Html.LabelForModel(item.answer.ToString(), htmlAttributes: new { @class = "form-label" })
                        </div>
                    </div>
                }
            }



        </div>
    }
</div>
