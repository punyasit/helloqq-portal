@model HelloQQPortal.Models.ProductManualInfo

@{
    ViewBag.Title = "การจัดการคู่มือ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/js/bootstrap.min.js"></script>

<link href="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.9/summernote-bs4.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.9/summernote-bs4.js"></script>


<h2>การจัดการคู่มือ</h2>

<div style="padding-left:40px;">
    @using (Html.BeginForm("UpdateProductManualDetail", "admin", FormMethod.Post, new { id = "frmInput", enctype = "multipart/form-data" }))
    {
        <div class="form-horizontal admin">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ProductManualContent)

            @if (Model.ProductManual.id > 0)
            {
                @Html.HiddenFor(model => model.ProductManual.id)
                @Html.HiddenFor(model => model.ProductManualContent)
                @Html.HiddenFor(model => model.ProductManual.created_by)

                <div class="form-group row">
                    @Html.Label("recordId", "ไอดี", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        @Html.LabelForModel(Model.ProductManual.id.ToString(), htmlAttributes: new { @class = "form-label" })
                    </div>
                </div>
            }
            <div class="form-group row">
                @Html.Label("product", "สินค้า", htmlAttributes: new { @class = "col-sm-2 col-form-label", id = "lbProductName" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.SelectedProductId,
                          new SelectList(Model.ProductList, "id", "name", Model.SelectedProductId),
                          new { @class = "custom-select", id = "ddlProduct" })
                </div>
            </div>

            <div class="form-group row">
                @Html.Label("subject", "หัวข้อ", htmlAttributes: new { @class = "col-sm-2 col-form-label", id = "lbSubject" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductManual.subject, new { htmlAttributes = new { @class = "form-control", required = "required", oninvalid = "this.setCustomValidity('โปรดกรอกชื่อคู่มือ')" } })
                    @Html.ValidationMessageFor(model => model.ProductManual.subject, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.Label("productDescription", "เนื้อหา", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-md-10">
                    @*@Html.TextAreaFor(m => m.ProductManual.content, new
                        {
                             id= "summernote"
                        })*@
                    <div style="padding:4px 0 4px 0" class="col-12">
                        <button type="button" id="btnEditContent" class="btn btn-outline-secondary btn-sm" onclick="edit()">แก้ไข</button>
                        <button type="button" id="btnEditContent" class="btn btn-outline-secondary btn-sm" onclick="preview()">พรีวิว</button>
                    </div>
                    <div id="summernote">Hello Summernote</div>

                </div>
            </div>

            @if (Model.ProductManual.id > 0)
            {
                <div class="form-group row">
                    @Html.Label("imageUpload", "รูปภาพ", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-md-10">
                        <div class="custom-file">
                            @Html.TextBoxFor(m => m.ImageUpload, new { type = "file", @class = "custom-file-input", multiple="", id="imgUpload", accpept="image/jpg" })
                            <label class="custom-file-label" for="customFile">Choose file</label>
                        </div>
                        <table class="admin table">
                            <tr>
                                <th>ไอดี</th><th>รูป</th><th>URL</th><th> สร้างเมื่อ</th><th></th>
                            </tr>

                            @foreach (var item in Model.ProductManualImage)
                                    {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.id)
                                    </td>
                                    <td>
                                        <image src="/image/@Url.Content(item.id.ToString())/thumbnail" style="width:100px;"></image>
                                    </td>
                                    <td>
                                        <label id="img_@item.id" onclick="CopyToClipboard('img_@item.id')">/image/@item.id/thumbnail</label>
                                    </td>
                                    <td>
                                        @item.created_on.Value.ToString("dd MMM yyyy")

                                    </td>
                                    <td>
                                        <a href="/admin/product-manual-image/@Model.ProductManual.id/@item.id">ลบ</a>
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>
            }

                                @if (Model.ProductManual.id > 0)
                                {
                <div class="form-group row">
                    @Html.Label("createdOn", "ลงเมื่อ", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-md-10">
                        <label class="form-label">@Model.ProductManual.created_on.ToString("dd MMM yyyy HH:mm:ss") </label>
                    </div>
                </div>
            }

            @if (Model.ProductManual.modified_on.HasValue)
                            {
                <div class="form-group row">
                    @Html.Label("modifiedOn", "อัพเดทล่าสุด", htmlAttributes: new { @class = "col-sm-2 col-form-label" })

                    <div class="col-md-10">
                        <label class="form-label">
                            @(Model.ProductManual.modified_on.HasValue ? Model.ProductManual.modified_on.Value.ToString("dd MMM yyyy HH:mm:ss") : "")
                        </label>
                    </div>
                </div>
            }

            <div class="form-group row">
                @Html.Label("status", "สถานะผู้ใช้", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                <div class="col-md-10" style="padding-top:6px;">
                    @Html.DropDownListFor(model => model.ProductManual.status, new List<SelectListItem>
                                            {
                                                new SelectListItem{ Text="ใช้งาน", Value = "1" },
                                                new SelectListItem{ Text="ไม่ใช้งาน", Value = "0" }
                                            }, htmlAttributes: new { @class = "custom-select" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-sm-2 col-form-label">
                    &nbsp;
                </div>
                <div class="col-md-10">
                    <input type="submit" value="บันทึก" onclick="updateContent()" class="btn btn-primary btn-md active" />
                    @*<input type="button" value="กลับหน้าหลัก" class="btn btn-default" />*@
                    @*@Html.ActionLink("กลับหน้าหลัก", "product", "admin", new { @class = "btn btn-primary btn-md active", @role = "button" })*@
                    <a href="/admin/product-manual" role="button" class="btn btn-primary btn-md active">กลับหน้าหลัก</a>
                </div>
            </div>
        </div>

        <script>
            var edit = function () {
                $('#summernote').summernote({
                    tabsize: 2,
                    height: 300,
                    focus: true
                });
            };

            var preview = function () {
                //var markup = $('#summernote').summernote('code');
                $('#ProductManualContent').val($('#summernote').summernote('code'));
                $('#summernote').summernote('destroy');
            };

            var updateContent = function () {
                $('#ProductManualContent').val($('#summernote').summernote('code'));
            }

            $(document).ready(function () {
                $('#summernote').html($('#ProductManualContent').val());
                $('#summernote').summernote({
                    tabsize: 2,
                    height: 300
                });
            })

            function CopyToClipboard(containerid) {
                //var range = document.getSelection().getRangeAt(0);
                //range.selectNode(document.getElementById(containerid));
                //window.getSelection().addRange(range);
                //document.execCommand("copy")

                var $temp = $("<input>");
                $("body").append($temp);
                $temp.val("<img src='" + $('#' + containerid).text()+"'/>").select();
                document.execCommand("copy");
                $temp.remove();
            }

            $('#imgUpload').on('change', function () {
                //get the file name
                var fileName = $(this).val();
                //replace the "Choose a file" label
                $(this).next('.custom-file-label').html(fileName);
            })

        </script>
    }
</div>